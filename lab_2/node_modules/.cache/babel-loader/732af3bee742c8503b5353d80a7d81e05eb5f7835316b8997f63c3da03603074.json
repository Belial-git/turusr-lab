{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/\\u0421\\u0435\\u0441\\u0441\\u0438\\u044F/\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431 \\u0418\\u041F/lab_2/src/Component/List.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TaskView from \"./TaskView\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListComponent = props => {\n  _s();\n  const [List, setList] = useState([]);\n  useEffect(() => {\n    setList([{\n      id: 1,\n      content: 'Test 1',\n      done: false\n    }, {\n      id: 2,\n      content: 'Test 2',\n      done: false\n    }, {\n      id: 3,\n      content: 'Test 3',\n      done: false\n    }, {\n      id: 4,\n      content: 'Test 4',\n      done: true\n    }]);\n  }, []);\n  const handleDelete = key => {\n    let tmp = Array.from(List);\n    tmp.splice(key, 1);\n    setList(tmp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'list',\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: content => save(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), List.map(item => {\n      return /*#__PURE__*/_jsxDEV(TaskView, {\n        task: item,\n        onDelete: () => handleDelete()\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_s(ListComponent, \"fKaIWDCuhw96u9vLCO+CuZM+830=\");\n_c = ListComponent;\nexport default ListComponent;\nvar _c;\n$RefreshReg$(_c, \"ListComponent\");","map":{"version":3,"names":["useEffect","useState","TaskView","TaskForm","ListComponent","props","List","setList","id","content","done","handleDelete","key","tmp","Array","from","splice","save","map","item"],"sources":["/Users/macbook/Desktop/Сессия/Разраб ИП/lab_2/src/Component/List.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport TaskView from \"./TaskView\";\nimport TaskForm from \"./TaskForm\";\n\nconst ListComponent = props =>{\n\n    const [List,setList]=useState([]);\n\n    useEffect(()=>{\n        setList([\n            {id:1 , content: 'Test 1', done: false},\n            {id:2 , content: 'Test 2', done: false},\n            {id:3 , content: 'Test 3', done: false},\n            {id:4 , content: 'Test 4', done: true},\n        ])\n    },[])\n\n    const handleDelete=(key)=>{\n        let tmp =Array.from(List);\n        tmp.splice(key,1);\n        setList(tmp);\n    }\n\n\n    return <div className={'list'}>\n        <TaskForm onSave={(content)=>save(content)}/>\n        {List.map(item=>{\n            return <TaskView key={item.id} task={item} onDelete={()=>handleDelete()}/>\n        })}\n    </div>\n}\n\nexport default ListComponent"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,aAAa,GAAGC,KAAK,IAAG;EAAA;EAE1B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAEjCD,SAAS,CAAC,MAAI;IACVO,OAAO,CAAC,CACJ;MAACC,EAAE,EAAC,CAAC;MAAGC,OAAO,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAK,CAAC,EACvC;MAACF,EAAE,EAAC,CAAC;MAAGC,OAAO,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAK,CAAC,EACvC;MAACF,EAAE,EAAC,CAAC;MAAGC,OAAO,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAK,CAAC,EACvC;MAACF,EAAE,EAAC,CAAC;MAAGC,OAAO,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAI,CAAC,CACzC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,YAAY,GAAEC,GAAG,IAAG;IACtB,IAAIC,GAAG,GAAEC,KAAK,CAACC,IAAI,CAACT,IAAI,CAAC;IACzBO,GAAG,CAACG,MAAM,CAACJ,GAAG,EAAC,CAAC,CAAC;IACjBL,OAAO,CAACM,GAAG,CAAC;EAChB,CAAC;EAGD,oBAAO;IAAK,SAAS,EAAE,MAAO;IAAA,wBAC1B,QAAC,QAAQ;MAAC,MAAM,EAAGJ,OAAO,IAAGQ,IAAI,CAACR,OAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,EAC5CH,IAAI,CAACY,GAAG,CAACC,IAAI,IAAE;MACZ,oBAAO,QAAC,QAAQ;QAAe,IAAI,EAAEA,IAAK;QAAC,QAAQ,EAAE,MAAIR,YAAY;MAAG,GAAlDQ,IAAI,CAACX,EAAE;QAAA;QAAA;QAAA;MAAA,QAA6C;IAC9E,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AACV,CAAC;AAAA,GA1BKJ,aAAa;AAAA,KAAbA,aAAa;AA4BnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}